file://constituents.xls <- http://www.spindices.com/documents/additional-material/sp-500-eps-est.xlsx?force_download=true ! download

file://../data/constituents.csv <- file://constituents.xls, file://fixers.py ! python
    import csv
    #import dataconverters.xls
    import datautil.tabular.xls as xlstab
    from fixers import fixsymbol, fixname 

    reader = xlstab.XlsReader()
    tabdata = reader.read(open("constituents.xls"), sheet_index=3)
    records = tabdata.data

    header = ['Symbol', 'Name', 'Sector']
    # data beings on row 7
    records = records[6:]

    # sheet has: TICKER, COMPANY, ... SECTOR
    records = [ [ fixsymbol(x[1]), fixname(x[2]), x[9] ] for x in records ]
    records.sort(key=lambda s: s[1].lower())

    writer = csv.writer(open('../data/constituents.csv', 'w'), lineterminator='\n')
    writer.writerow(header)
    writer.writerows(records)

file://../data/constituents-financials.csv <- file://../data/constituents.csv, file://fixers.py ! python
    import urllib
    import csv
    from fixers import correctToBillions

    items = [
        ['l1', 'Price'], # strictly this is ask price
        ['y', 'Dividend Yield'],
        ['r', 'Price/Earnings'],
        ['e', 'Earnings/Share'],
        ['b4', 'Book Value'],
        ['j', '52 week low'],
        ['k', '52 week high'],
        ['j1', 'Market Cap'],
        ['j4', 'EBITDA'],
        ['p5', 'Price/Sales'],
        ['p6', 'Price/Book']
    ]
    params = ''.join([ x[0] for x in items ])

    url = 'http://download.finance.yahoo.com/d/quotes.csv?'
    edgar = 'http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK='


    reader = csv.reader(open('../data/constituents.csv'))
    outrows = [ row for row in reader ]
    symbols = [ row[0] for row in outrows[1:] ]

    outrows[0] += [ item[1] for item in items ] + ['SEC Filings']
    
    for idx in range(0,500,20):
        query = url + 's=' + '+'.join(symbols[idx:idx+20]) + '&f=' + params
        fo = urllib.urlopen(query)
        tmpcsv  = csv.reader(fo)
        rows = [ row for row in tmpcsv ]
        for count, row in enumerate(rows):
            realidx = idx + count + 1
            # change n/a to empty cell
            row = [ x.replace('N/A', '') for x in row ]
            # market cap and ebitda have 'B' or 'M' in them sometimes
            row[7] = correctToBillions(row[7])
            row[8] = correctToBillions(row[8])
            # add the edgar link
            row.append(edgar + symbols[realidx-1])
            outrows[realidx] = outrows[realidx] + row
        print('Processed: %s rows' % (idx + 20))

    fo = open('../data/constituents-financials.csv', 'w')
    writer = csv.writer(fo, lineterminator='\n')
    writer.writerows(outrows)
    fo.close()
    
http://raw.githubusercontent.com/lexman/s-and-p-500-companies/master/data/constituents-financials.csv, http://raw.githubusercontent.com/lexman/s-and-p-500-companies/master/data/constituents.csv <- file://../data/constituents-financials.csv, file://../data/constituents.csv
    git add ../data/constituents-financials.csv ../data/constituents.csv
    TODAY=`date +%Y%m%d`
    git commit -m "[data] automatic update $TODAY" || exit
    # In case someone has pushed some changes during the processing
    git pull --rebase
    git push

